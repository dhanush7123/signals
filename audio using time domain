#read audio file
import librosa 
import librosa.display 
import IPython.display as ipd  
import matplotlib.pyplot as plt 
ipd.Audio('/content/ambulance.wav')
audio_path=('/content/ambulance.wav')
x , sr = librosa.load(audio_path)

#measure duration
ipd.Audio('/content/ambulance.wav')
y=len(x)
print(f"length of the audio file {y}")
y1=sr 
print(f"Sampling frequency = {y1} Hz")
duration_of_sound=y/y1 
print(f"Duration of sound = {duration_of_sound} seconds")

#Amplitude variation
plt.figure(figsize=(14, 5)) 
plt.grid(True )
librosa.display.waveshow(x)
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.title("Time Domain Anlysis of Audio file")

#spectrogram representation
X = librosa.stft(x)
Xdb = librosa.amplitude_to_db(abs(X))
plt.figure(figsize=(20, 5))
librosa.display.specshow(Xdb, sr=sr, 
x_axis='time', y_axis='hz')
plt.title("spectrogram representation")
plt.colorbar()

#mel frequency
librosa.load('/content/ambulance.wav')
mfccs=librosa.feature.mfcc(y=x, sr=sr, n_mfcc=40) 
plt.figure(figsize=(10,4))
librosa.display.specshow(mfccs, x_axis="time")
plt.colorbar()
plt.title('MFCC')
plt.tight_layout()
plt.show()

#chroma
x, sr = librosa.load('/content/ambulance.wav')
hop_length = 512
S = np.abs(librosa.stft(x))
chroma = librosa.feature.chroma_stft(S=S, sr=sr)
plt.figure(figsize=(15, 5))
plt.title('CHROMA')
librosa.display.specshow(chroma,x_axis='time', y_axis='chroma', hop_length=hop_length, cmap='coolwarm')



