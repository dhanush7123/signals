import numpy as np
import matplotlib.pyplot as plt

# Function to compute circular correlation
def circular_correlation_nf(x,y):
  N=len(x)
  res=[]
  for n in range(-(N-1),N):
    res_sum=0
    for k in range(N):
      if k-n>=0 and k-n<N:
        res_sum+=x[k] * y[(k-n)]
    res.append(res_sum)
  return res


def plot_sequences(x, h, y):
    N = len(x)
    n = np.arange(N)
    plt.figure(figsize=(12, 8))
    plt.subplot(3, 1, 1)
    plt.stem(n, x, basefmt=" ", use_line_collection=True)
    plt.title('Sequence x[n]')
    plt.xlabel('n')
    plt.ylabel('x[n]')
    plt.grid()

    plt.subplot(3, 1, 2)
    plt.stem(n, h, basefmt=" ", use_line_collection=True)
    plt.title('Sequence h[n]')
    plt.xlabel('n')
    plt.ylabel('h[n]')
    plt.grid()
    plt.subplot(3, 1, 3)
    
    plt.stem(n, y, basefmt=" ", use_line_collection=True)
    plt.title('Circular Correlation y[n]')
    plt.xlabel('n')
    plt.ylabel('y[n]')
    plt.grid()

    plt.tight_layout()
    plt.show()


x = np.array([1, 2, 3, 4]) 
h = np.array([2,3,4,5])  


y = circular_correlation(x, h)

print("x[n]:", x)
print("h[n]:", h)
print("Circular Correlation y[n]:", y)


plot_sequences(x, h, y)
